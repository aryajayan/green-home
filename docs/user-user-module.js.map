{"version":3,"sources":["./src/app/user/login/login.component.ts","./src/app/user/login/login.component.html","./src/app/user/user.component.html","./src/app/user/user.component.ts","./src/app/user/user.module.ts","./src/app/user/user-banner/user-banner.component.ts","./src/app/user/user-banner/user-banner.component.html","./src/app/user/signup/signup.component.ts","./src/app/user/signup/signup.component.html"],"names":[],"mappings":"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","file":"user-user-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n\r\n  templateUrl: './login.component.html',\r\n\r\n  styleUrls: ['./login.component.css'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n\r\n  signUpForm: FormGroup;\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loginForm = new FormGroup({\r\n      email: this.fb.control(null, [Validators.email, Validators.required]),\r\n\r\n      password: this.fb.control(null, [Validators.required]),\r\n    });\r\n  }\r\n}\r\n","<div class=\"row \">\r\n\r\n  <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12 login_form\">\r\n\r\n    <h3>Login</h3>\r\n\r\n    <form [formGroup]=\"loginForm\">\r\n\r\n      <div class=\"form-group\">\r\n\r\n        <label for=\"email\">Email address</label>\r\n\r\n        <input type=\"email\"\r\n               class=\"form-control input_transparent\"\r\n               id=\"email\"\r\n               formControlName=\"email\"\r\n               placeholder=\"Enter email\"\r\n               autocomplete=\"off\">\r\n\r\n        <small class=\"form-text text-muted\"\r\n               *ngIf=\"loginForm.get('email').touched && loginForm.get('email').invalid\">\r\n\r\n          Please enter your email address\r\n\r\n        </small>\r\n\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n\r\n        <label for=\"password\">Password</label>\r\n\r\n        <input type=\"password\"\r\n               class=\"form-control input_transparent\"\r\n               id=\"password\"\r\n               formControlName=\"password\"\r\n               placeholder=\"Enter password\"\r\n               autocomplete=\"off\">\r\n\r\n        <small class=\"form-text text-muted\"\r\n               *ngIf=\"loginForm.get('password').touched && loginForm.get('password').invalid\">\r\n\r\n          Please enter your password\r\n\r\n        </small>\r\n\r\n      </div>\r\n\r\n      <button type=\"button\"\r\n              class=\"btn primary_button\"\r\n              [disabled]=\"!loginForm.valid\">LOGIN</button>\r\n\r\n    </form>\r\n\r\n  </div>\r\n\r\n</div>\r\n","<div class=\"row userform_container\">\r\n  <div class=\"col-xs-12 col-sm-12 col-md-5 col-lg-5\">\r\n    <app-login *ngIf=\"!newUser\"></app-login>\r\n    <app-signup *ngIf=\"newUser\"></app-signup>\r\n  </div>\r\n  <div class=\"col-xs-7 col-sm-7 col-md-7 col-lg-7S\">\r\n    <app-user-banner></app-user-banner>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.css'],\r\n})\r\nexport class UserComponent implements OnInit {\r\n  newUser: boolean;\r\n  constructor(private route: ActivatedRoute) {}\r\n\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe((data) => {\r\n      this.newUser = JSON.parse(data['newUser']);\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UserComponent } from './user.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { UserBannerComponent } from './user-banner/user-banner.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    UserComponent,\r\n    LoginComponent,\r\n    SignupComponent,\r\n    UserBannerComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    NgbModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild([{ path: '', component: UserComponent }]),\r\n  ],\r\n})\r\nexport class UserModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user-banner',\r\n  templateUrl: './user-banner.component.html',\r\n  styleUrls: ['./user-banner.component.css']\r\n})\r\nexport class UserBannerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"banner_container\"></div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\n\r\nimport {\r\n  AbstractControl,\r\n  FormBuilder,\r\n  FormGroup,\r\n  ValidationErrors,\r\n  Validators,\r\n} from '@angular/forms';\r\n\r\nimport { NgbDatepicker } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { Store } from '@ngrx/store';\r\n\r\nimport * as fromApp from '../../app.reducer';\r\n\r\nimport * as UserActions from '../store/user.action';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n\r\n  templateUrl: './signup.component.html',\r\n\r\n  styleUrls: ['./signup.component.css'],\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  signupForm: FormGroup;\r\n\r\n  @ViewChild('dp') dp: NgbDatepicker;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n\r\n    private store: Store<fromApp.AppState>\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.createFormGroup();\r\n  }\r\n\r\n  createFormGroup() {\r\n    this.signupForm = new FormGroup(\r\n      {\r\n        id: this.fb.control(-1),\r\n\r\n        name: this.fb.control(null, [Validators.required]),\r\n\r\n        dob: this.fb.control(new Date(), Validators.required),\r\n\r\n        email: this.fb.control(null, [Validators.required, Validators.email]),\r\n\r\n        password: this.fb.control(null, [Validators.required]),\r\n\r\n        confirm: this.fb.control(null, [Validators.required]),\r\n      },\r\n      { validators: this.matchPassword }\r\n    );\r\n  }\r\n\r\n  matchPassword(control: AbstractControl): ValidationErrors | null {\r\n    const password = control.get('password').value;\r\n\r\n    const confirm = control.get('confirm').value;\r\n\r\n    if (password != confirm) {\r\n      return { noMatch: true };\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  navigateDateEvent(event) {\r\n    this.signupForm.patchValue({\r\n      dob: event.next,\r\n    });\r\n  }\r\n\r\n  signupClicked() {\r\n    this.store.dispatch(\r\n      UserActions.Signup({\r\n        email: this.signupForm.get('email').value,\r\n\r\n        name: this.signupForm.get('name').value,\r\n\r\n        dob: this.signupForm.get('dob').value,\r\n\r\n        password: this.signupForm.get('password').value,\r\n      })\r\n    );\r\n  }\r\n}\r\n","<div class=\"row \">\r\n\r\n  <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12 login_form\">\r\n\r\n    <h3>Sign Up</h3>\r\n\r\n    <form [formGroup]=\"signupForm\">\r\n\r\n      <div class=\"form-group\">\r\n\r\n        <label for=\"name\">Name</label>\r\n\r\n        <input type=\"text\"\r\n               class=\"form-control input_transparent\"\r\n               id=\"name\"\r\n               formControlName=\"name\"\r\n               placeholder=\"Enter name\"\r\n               autocomplete=\"off\">\r\n\r\n        <small class=\"form-text text-muted\"\r\n               *ngIf=\"signupForm.get('name').touched && signupForm.get('name').invalid\">\r\n\r\n          This field cannot be empty\r\n\r\n        </small>\r\n\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n\r\n        <label for=\"name\">Date of birth</label>\r\n\r\n        <div>\r\n\r\n\r\n\r\n          <div class=\"input-group-append \">\r\n\r\n            <button class=\"btn btn-outline-secondary calendar\"\r\n                    (click)=\"d.toggle()\"\r\n                    type=\"button\"><i class=\"fa fa-calendar\"\r\n                 aria-hidden=\"true\"></i></button>\r\n\r\n            <input class=\"input_transparent\"\r\n                   style=\"width: 100%;\"\r\n                   placeholder=\"yyyy-mm-dd\"\r\n                   name=\"dp\"\r\n                   formControlName=\"dob\"\r\n                   ngbDatepicker\r\n                   #d=\"ngbDatepicker\">\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <!-- <ngb-datepicker #dp\r\n\r\n                              formControlName=\"dob\"\r\n\r\n                              (navigate)=\"navigateDateEvent($event)\"></ngb-datepicker> -->\r\n\r\n        <small class=\"form-text text-muted\"\r\n               *ngIf=\"signupForm.get('dob').touched && signupForm.get('dob').invalid\">\r\n\r\n          This field cannot be empty\r\n\r\n        </small>\r\n\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n\r\n        <label for=\"email\">Email</label>\r\n\r\n        <input type=\"email\"\r\n               class=\"form-control input_transparent\"\r\n               id=\"email\"\r\n               formControlName=\"email\"\r\n               placeholder=\"Enter email\"\r\n               autocomplete=\"off\">\r\n\r\n        <small class=\"form-text text-muted\"\r\n               *ngIf=\"signupForm.get('email').touched && signupForm.get('email').invalid\">\r\n\r\n          Please enter a valid email address\r\n\r\n        </small>\r\n\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n\r\n        <label for=\"password\">Password</label>\r\n\r\n        <input type=\"password\"\r\n               class=\"form-control input_transparent\"\r\n               id=\"password\"\r\n               formControlName=\"password\"\r\n               placeholder=\"Enter password\"\r\n               autocomplete=\"off\">\r\n\r\n        <small class=\"form-text text-muted\"\r\n               *ngIf=\"signupForm.get('password').touched && signupForm.get('password').invalid\">\r\n\r\n          This field cannot be empty\r\n\r\n        </small>\r\n\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n\r\n        <label for=\"confirm\">Confirm Password</label>\r\n\r\n        <input type=\"password\"\r\n               class=\"form-control input_transparent\"\r\n               id=\"confirm\"\r\n               formControlName=\"confirm\"\r\n               placeholder=\"Please enter your password again to confirm.\"\r\n               autocomplete=\"off\">\r\n\r\n        <small class=\"form-text text-muted\"\r\n               *ngIf=\"signupForm.get('confirm').touched && signupForm.get('confirm').invalid\">\r\n\r\n          This field cannot be empty\r\n\r\n        </small>\r\n\r\n        <small class=\"form-text text-muted\"\r\n               *ngIf=\"signupForm.get('confirm').touched && signupForm.errors?.noMatch\">\r\n\r\n          Passwords doesn't match\r\n\r\n        </small>\r\n\r\n      </div>\r\n\r\n      <button type=\"button\"\r\n              class=\"btn primary_button\"\r\n              [disabled]=\"!signupForm.valid\"\r\n              (click)=\"signupClicked()\">SIGN UP</button>\r\n\r\n    </form>\r\n\r\n  </div>\r\n\r\n</div>\r\n"],"sourceRoot":"webpack:///"}